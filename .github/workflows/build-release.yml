name: Build and Release

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: |
          yarn run lint
          yarn run stylelint

      - name: Build
        run: yarn build
        working-directory: packages/ckeditor5-build-classic

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: packages/ckeditor5-build-classic/build
          retention-days: 2

  release:
    name: Release
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/stable'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'

      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: packages/ckeditor5-build-classic/build

      - name: Bump version and commit
        run: yarn version --patch --message "Release %s"
        working-directory: packages/ckeditor5-build-classic

      - name: Git push
        run: |
          git push && git push --tags

      - name: Publish
        run: yarn publish
        working-directory: packages/ckeditor5-build-classic
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

